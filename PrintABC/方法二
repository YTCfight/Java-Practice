private static volatile String ss = "A";
    public static void fun2() {
        new Thread(new MyRunnable("A")).start();
        new Thread(new MyRunnable("B")).start();
        new Thread(new MyRunnable("C")).start();
    }
    static class MyRunnable implements Runnable {
        private String s;

        public MyRunnable(String s) {
            this.s = s;
        }

        @Override
        public void run() {
            if (s.equals("A")) {
                for (int i = 0; i < 10; i++) {
                    synchronized (PrintABC.class) {
                        try {
                            while (!ss.equals("A")) {
                                PrintABC.class.wait();
                            }
                            System.out.print(ss);
                            ss = "B";
                            PrintABC.class.notifyAll();
                        } catch (InterruptedException e) {
                            e.printStackTrace();
                        }
                    }
                }
            } else if (s.equals("B")) {
                for (int i = 0; i < 10; i++) {
                    synchronized (PrintABC.class) {
                        try {
                            while (!ss.equals("B")) {
                                PrintABC.class.wait();
                            }
                            System.out.print(ss);
                            ss = "C";
                            PrintABC.class.notifyAll();
                        } catch (InterruptedException e) {
                            e.printStackTrace();
                        }
                    }
                }
            } else {
                for (int i = 0; i < 10; i++) {
                    synchronized (PrintABC.class) {
                        try {
                            while (!ss.equals("C")) {
                                PrintABC.class.wait();
                            }
                            System.out.println(s);
                            ss = "A";
                            PrintABC.class.notifyAll();
                        } catch (InterruptedException e) {
                            e.printStackTrace();
                        }
                    }
                }
            }
        }
    }
